package cn.cttic.roadtransapi.orm.roadway.domain;

import java.util.ArrayList;
import java.util.List;

public class RtBfF0103Example {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public RtBfF0103Example() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andClosingReasonIsNull() {
            addCriterion("CLOSING_REASON is null");
            return (Criteria) this;
        }

        public Criteria andClosingReasonIsNotNull() {
            addCriterion("CLOSING_REASON is not null");
            return (Criteria) this;
        }

        public Criteria andClosingReasonEqualTo(String value) {
            addCriterion("CLOSING_REASON =", value, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonNotEqualTo(String value) {
            addCriterion("CLOSING_REASON <>", value, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonGreaterThan(String value) {
            addCriterion("CLOSING_REASON >", value, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonGreaterThanOrEqualTo(String value) {
            addCriterion("CLOSING_REASON >=", value, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonLessThan(String value) {
            addCriterion("CLOSING_REASON <", value, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonLessThanOrEqualTo(String value) {
            addCriterion("CLOSING_REASON <=", value, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonLike(String value) {
            addCriterion("CLOSING_REASON like", value, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonNotLike(String value) {
            addCriterion("CLOSING_REASON not like", value, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonIn(List<String> values) {
            addCriterion("CLOSING_REASON in", values, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonNotIn(List<String> values) {
            addCriterion("CLOSING_REASON not in", values, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonBetween(String value1, String value2) {
            addCriterion("CLOSING_REASON between", value1, value2, "closingReason");
            return (Criteria) this;
        }

        public Criteria andClosingReasonNotBetween(String value1, String value2) {
            addCriterion("CLOSING_REASON not between", value1, value2, "closingReason");
            return (Criteria) this;
        }

        public Criteria andImplementationIsNull() {
            addCriterion("IMPLEMENTATION is null");
            return (Criteria) this;
        }

        public Criteria andImplementationIsNotNull() {
            addCriterion("IMPLEMENTATION is not null");
            return (Criteria) this;
        }

        public Criteria andImplementationEqualTo(String value) {
            addCriterion("IMPLEMENTATION =", value, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationNotEqualTo(String value) {
            addCriterion("IMPLEMENTATION <>", value, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationGreaterThan(String value) {
            addCriterion("IMPLEMENTATION >", value, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationGreaterThanOrEqualTo(String value) {
            addCriterion("IMPLEMENTATION >=", value, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationLessThan(String value) {
            addCriterion("IMPLEMENTATION <", value, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationLessThanOrEqualTo(String value) {
            addCriterion("IMPLEMENTATION <=", value, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationLike(String value) {
            addCriterion("IMPLEMENTATION like", value, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationNotLike(String value) {
            addCriterion("IMPLEMENTATION not like", value, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationIn(List<String> values) {
            addCriterion("IMPLEMENTATION in", values, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationNotIn(List<String> values) {
            addCriterion("IMPLEMENTATION not in", values, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationBetween(String value1, String value2) {
            addCriterion("IMPLEMENTATION between", value1, value2, "implementation");
            return (Criteria) this;
        }

        public Criteria andImplementationNotBetween(String value1, String value2) {
            addCriterion("IMPLEMENTATION not between", value1, value2, "implementation");
            return (Criteria) this;
        }

        public Criteria andClosingDateIsNull() {
            addCriterion("CLOSING_DATE is null");
            return (Criteria) this;
        }

        public Criteria andClosingDateIsNotNull() {
            addCriterion("CLOSING_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andClosingDateEqualTo(Integer value) {
            addCriterion("CLOSING_DATE =", value, "closingDate");
            return (Criteria) this;
        }

        public Criteria andClosingDateNotEqualTo(Integer value) {
            addCriterion("CLOSING_DATE <>", value, "closingDate");
            return (Criteria) this;
        }

        public Criteria andClosingDateGreaterThan(Integer value) {
            addCriterion("CLOSING_DATE >", value, "closingDate");
            return (Criteria) this;
        }

        public Criteria andClosingDateGreaterThanOrEqualTo(Integer value) {
            addCriterion("CLOSING_DATE >=", value, "closingDate");
            return (Criteria) this;
        }

        public Criteria andClosingDateLessThan(Integer value) {
            addCriterion("CLOSING_DATE <", value, "closingDate");
            return (Criteria) this;
        }

        public Criteria andClosingDateLessThanOrEqualTo(Integer value) {
            addCriterion("CLOSING_DATE <=", value, "closingDate");
            return (Criteria) this;
        }

        public Criteria andClosingDateIn(List<Integer> values) {
            addCriterion("CLOSING_DATE in", values, "closingDate");
            return (Criteria) this;
        }

        public Criteria andClosingDateNotIn(List<Integer> values) {
            addCriterion("CLOSING_DATE not in", values, "closingDate");
            return (Criteria) this;
        }

        public Criteria andClosingDateBetween(Integer value1, Integer value2) {
            addCriterion("CLOSING_DATE between", value1, value2, "closingDate");
            return (Criteria) this;
        }

        public Criteria andClosingDateNotBetween(Integer value1, Integer value2) {
            addCriterion("CLOSING_DATE not between", value1, value2, "closingDate");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoIsNull() {
            addCriterion("CASE_REG_NO is null");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoIsNotNull() {
            addCriterion("CASE_REG_NO is not null");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoEqualTo(String value) {
            addCriterion("CASE_REG_NO =", value, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoNotEqualTo(String value) {
            addCriterion("CASE_REG_NO <>", value, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoGreaterThan(String value) {
            addCriterion("CASE_REG_NO >", value, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoGreaterThanOrEqualTo(String value) {
            addCriterion("CASE_REG_NO >=", value, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoLessThan(String value) {
            addCriterion("CASE_REG_NO <", value, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoLessThanOrEqualTo(String value) {
            addCriterion("CASE_REG_NO <=", value, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoLike(String value) {
            addCriterion("CASE_REG_NO like", value, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoNotLike(String value) {
            addCriterion("CASE_REG_NO not like", value, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoIn(List<String> values) {
            addCriterion("CASE_REG_NO in", values, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoNotIn(List<String> values) {
            addCriterion("CASE_REG_NO not in", values, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoBetween(String value1, String value2) {
            addCriterion("CASE_REG_NO between", value1, value2, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andCaseRegNoNotBetween(String value1, String value2) {
            addCriterion("CASE_REG_NO not between", value1, value2, "caseRegNo");
            return (Criteria) this;
        }

        public Criteria andOperTimeIsNull() {
            addCriterion("OPER_TIME is null");
            return (Criteria) this;
        }

        public Criteria andOperTimeIsNotNull() {
            addCriterion("OPER_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andOperTimeEqualTo(String value) {
            addCriterion("OPER_TIME =", value, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeNotEqualTo(String value) {
            addCriterion("OPER_TIME <>", value, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeGreaterThan(String value) {
            addCriterion("OPER_TIME >", value, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeGreaterThanOrEqualTo(String value) {
            addCriterion("OPER_TIME >=", value, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeLessThan(String value) {
            addCriterion("OPER_TIME <", value, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeLessThanOrEqualTo(String value) {
            addCriterion("OPER_TIME <=", value, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeLike(String value) {
            addCriterion("OPER_TIME like", value, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeNotLike(String value) {
            addCriterion("OPER_TIME not like", value, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeIn(List<String> values) {
            addCriterion("OPER_TIME in", values, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeNotIn(List<String> values) {
            addCriterion("OPER_TIME not in", values, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeBetween(String value1, String value2) {
            addCriterion("OPER_TIME between", value1, value2, "operTime");
            return (Criteria) this;
        }

        public Criteria andOperTimeNotBetween(String value1, String value2) {
            addCriterion("OPER_TIME not between", value1, value2, "operTime");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeIsNull() {
            addCriterion("PROVINCE_CODE is null");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeIsNotNull() {
            addCriterion("PROVINCE_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeEqualTo(Integer value) {
            addCriterion("PROVINCE_CODE =", value, "provinceCode");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeNotEqualTo(Integer value) {
            addCriterion("PROVINCE_CODE <>", value, "provinceCode");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeGreaterThan(Integer value) {
            addCriterion("PROVINCE_CODE >", value, "provinceCode");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("PROVINCE_CODE >=", value, "provinceCode");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeLessThan(Integer value) {
            addCriterion("PROVINCE_CODE <", value, "provinceCode");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeLessThanOrEqualTo(Integer value) {
            addCriterion("PROVINCE_CODE <=", value, "provinceCode");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeIn(List<Integer> values) {
            addCriterion("PROVINCE_CODE in", values, "provinceCode");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeNotIn(List<Integer> values) {
            addCriterion("PROVINCE_CODE not in", values, "provinceCode");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeBetween(Integer value1, Integer value2) {
            addCriterion("PROVINCE_CODE between", value1, value2, "provinceCode");
            return (Criteria) this;
        }

        public Criteria andProvinceCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("PROVINCE_CODE not between", value1, value2, "provinceCode");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 15 16:31:19 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RT_BF_F0103
     *
     * @mbggenerated Mon Jun 15 16:31:19 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}